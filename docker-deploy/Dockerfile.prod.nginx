# For use on development machine
# https://hub.docker.com/_/nginx/
# Start a container which runs an Nginx reverse proxy listening on ports 80 and 433
# Proxy pass to port 8000 on the web docker container

FROM nginx

# (not used) Change user; 
# (not used) add permissions for cache, configuration directory, logging to nginx user
ENV HOME=/home/nginx
ENV NGINX_HOME=/home/nginx/web
# RUN chown -R nginx:nginx $HOME && chmod -R 755 $HOME && \
#     chown -R nginx:nginx /var/cache/nginx && \
#     chown -R nginx:nginx /var/log/nginx && \
#     chown -R nginx:nginx /etc/nginx/conf.d
# RUN touch /var/run/nginx.pid && \
#     chown -R nginx:nginx /var/run/nginx.pid
# USER nginx

# SSL Certificates, Unzip letsencrypt backup into folder
# COPY ./docker-deploy/letsencrypt_archive.tar.gz $NGINX_HOME/
# RUN tar -xvf $NGINX_HOME/letsencrypt_archive.tar.gz --directory /
RUN apt update && apt upgrade -y
RUN apt install python3 python3-pip python3-venv libaugeas0 -y
RUN pip3 install --upgrade pip
RUN pip3 install certbot certbot-nginx
RUN ln -s certbot /usr/bin/certbot
RUN echo "0 0,12 * * * python3 -c 'import random; import time; time.sleep(random.random() * 3600)' && certbot renew -q" | tee -a /etc/crontab > /dev/null
# RUN certbot renew --dry-run # This will fail unless ports 80 and 443 are available and exposed...
RUN ls -la /etc/

# Remove default nginx configuration (Not the main configuration file)
RUN rm /etc/nginx/conf.d/default.conf

# Static content to serve (removed and added to volume)
# COPY ./my_site/static-serve $HOME/web/my-site/my_site/static-serve/

# Media content to serve (removed and added to volume)
# COPY ./my_site/media $HOME/web/my-site/my_site/media/

# NGINX Configuration file
COPY ./docker-deploy/nginx.prod.template /etc/nginx/conf.d

# Start container, consider using -c configuration file switch
# If I add /etc/nginx/nginx.conf to my configuration
# ENTRYPOINT /bin/bash -c envsubst '${WEBAPP_HOSTNAME},${WEBAPP_INTERNAL_PORT},${REVERSE_PROXY_HOSTNAME},${HOME}' < /etc/nginx/conf.d/nginx.test.template > /etc/nginx/conf.d/localhost.conf && nginx -g 'daemon off;'
COPY ./docker-deploy/nginx.prod.entrypoint.sh $HOME/web/my-site/my_site/
ENTRYPOINT ["/bin/bash", "/home/nginx/web/my-site/my_site/nginx.prod.entrypoint.sh"]