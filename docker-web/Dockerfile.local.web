# For use on local (development) machine
# Start a container which runs a gunicorn WSGI on an internal port
# Does not run an SSH server
# By John Vorsten 2020-03-09

###########
# builder #
###########
FROM python:3.7-buster as builder

# Set working directory
WORKDIR /usr/src/app

# Set environment variables
# Prevents writing .pyc files
ENV PYTHONDONTWRITEBYTECODE 1 
# Dont buffer standard input and output
ENV PYTONBUFFERED 1

# Install dependencies
COPY ./requirements.txt /usr/src/app
RUN apt-get update && mkdir /usr/src/app/wheels
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

#########
# Final #
#########
# Create directory for app user
# Create a user named app, and add app to the app group
FROM python:3.7-buster
RUN mkdir -p /home/app
RUN addgroup --system app_group && adduser --ingroup app_group app

# Set environment variables for where the application will be running
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# Update & Install deps
RUN apt-get update
# https://github.com/mkleehammer/pyodbc/wiki/Install
RUN apt-get install -y unixodbc-dev gcc g++ && pip install pyodbc
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# adding custom MS repository to apt search list
RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
RUN curl https://packages.microsoft.com/config/debian/10/prod.list > /etc/apt/sources.list.d/mssql-release.list

# install SQL Server drivers and tools
RUN apt-get update && ACCEPT_EULA=Y apt-get install -y msodbcsql17 mssql-tools
RUN echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
RUN /bin/bash -c "source ~/.bashrc"

# Copy entrypoint from local drive to the home working directory
COPY ./docker-web/entrypoint.local.web.sh $APP_HOME

# Copy the project from local drive to the home working directory
COPY . $APP_HOME

# Change ownership of app files in home directory to app user
RUN chown -R app:app_group $APP_HOME

# Change the user
USER app

# Setup an entrypoint
ENTRYPOINT ["/home/app/web/entrypoint.local.web.sh"]